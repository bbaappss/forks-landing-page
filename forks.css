/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

button {
    display: inline-flex;
    border: none;
    border-radius: 8px;
    margin: 0;
    text-decoration: none;
    background: #d1d1d1;
    font-family: sans-serif;
    font-size: 1rem;
    cursor: pointer;
    text-align: center;
    transition: background 250ms ease-in-out, 
                transform 150ms ease;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 28px;
    width: 28px;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

button:hover {
    background: #d1d1d1;
}

button:focus {
    background: #bdbdbd;
}

button:active {
    background: #e6e6e6;
}


.relative-parent {
    position: relative;
    min-width: 1em;
    width: min-content;
    display: flex;
    align-items: center;
    margin: 0 2px;
  }

  .size-calibration {
    visibility: hidden;
    /* Prevent the span from wrapping the text when input value has multiple words, or collapsing multiple spaces into one */
    white-space: pre;
  }

  .autosized-input {
    position: absolute;
    left: 0;
    width: 100%;
  }
  
  .size-calibration, .autosized-input {
    border: 0;
    padding: 0;
    background: #bbbbbb;
    /* Demonstrate that this works for input with custom styles */
    font-size: 32px;
    text-align: center;
    min-width: 2em;
    border-radius: 8px;
  }

.forksInteractionContainer {
    display: flex;
    align-items: center;
    gap: 1em;
  }
  
.incrementDecrementContainer {
    display: flex;
    align-items: center;
}